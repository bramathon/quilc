### Quil standard gate defintions.

## Pauli Gates

DEFGATE I:
    1, 0
    0, 1

DEFGATE X:
    0, 1
    1, 0

DEFGATE Y:
    0, -i
    i, 0

DEFGATE Z:
    1, 0
    0, -1


## Hadamard Gate

DEFGATE H:
    1/sqrt(2), 1/sqrt(2)
    1/sqrt(2), -1/sqrt(2)


## Cartesian Rotation Gates

DEFGATE RX(%theta):
    cos(%theta/2),    -i*sin(%theta/2)
    -i*sin(%theta/2), cos(%theta/2)

DEFGATE RY(%theta):
    cos(%theta/2), -sin(%theta/2)
    sin(%theta/2), cos(%theta/2)

DEFGATE RZ(%theta):
    cis(-%theta/2), 0
    0,              cis(%theta/2)

## Single qubit unitary with euler angles
DEFGATE U(%theta, %phi, %lam):
    cos(%theta/2), -1*cis(%lam)*sin(%theta/2)
    cis(%phi)*sin(%theta/2), cis(%phi+%lam)*cos(%theta/2)


## Controlled-NOT Variants

DEFGATE CNOT:
    1, 0, 0, 0
    0, 1, 0, 0
    0, 0, 0, 1
    0, 0, 1, 0

# Also known as the Toffoli gate.
DEFGATE CCNOT:
    1, 0, 0, 0, 0, 0, 0, 0
    0, 1, 0, 0, 0, 0, 0, 0
    0, 0, 1, 0, 0, 0, 0, 0
    0, 0, 0, 1, 0, 0, 0, 0
    0, 0, 0, 0, 1, 0, 0, 0
    0, 0, 0, 0, 0, 1, 0, 0
    0, 0, 0, 0, 0, 0, 0, 1
    0, 0, 0, 0, 0, 0, 1, 0


## Phase Gates

DEFGATE S:
    1, 0
    0, i

DEFGATE T:
    1, 0
    0, cis(pi/4)

DEFGATE PHASE(%alpha):
    1, 0
    0, cis(%alpha)

DEFGATE CPHASE00(%alpha):
    cis(%alpha), 0, 0, 0
    0,           1, 0, 0
    0,           0, 1, 0
    0,           0, 0, 1

DEFGATE CPHASE01(%alpha):
    1, 0,           0, 0
    0, cis(%alpha), 0, 0
    0, 0,           1, 0
    0, 0,           0, 1

DEFGATE CPHASE10(%alpha):
    1, 0, 0,           0
    0, 1, 0,           0
    0, 0, cis(%alpha), 0
    0, 0, 0,           1

DEFGATE CPHASE(%alpha):
    1, 0, 0, 0
    0, 1, 0, 0
    0, 0, 1, 0
    0, 0, 0, cis(%alpha)

DEFGATE CZ:
    1, 0, 0,  0
    0, 1, 0,  0
    0, 0, 1,  0
    0, 0, 0, -1

## Swap Gates

DEFGATE SWAP:
    1, 0, 0, 0
    0, 0, 1, 0
    0, 1, 0, 0
    0, 0, 0, 1

# Also known as the Fredkin gate.
DEFGATE CSWAP:
    1, 0, 0, 0, 0, 0, 0, 0
    0, 1, 0, 0, 0, 0, 0, 0
    0, 0, 1, 0, 0, 0, 0, 0
    0, 0, 0, 1, 0, 0, 0, 0
    0, 0, 0, 0, 1, 0, 0, 0
    0, 0, 0, 0, 0, 0, 1, 0
    0, 0, 0, 0, 0, 1, 0, 0
    0, 0, 0, 0, 0, 0, 0, 1

DEFGATE ISWAP:
    1, 0, 0, 0
    0, 0, i, 0
    0, i, 0, 0
    0, 0, 0, 1

DEFGATE PSWAP(%theta):
    1, 0,           0,           0
    0, 0,           cis(%theta), 0
    0, cis(%theta), 0,           0
    0, 0,           0,           1

# For consistency with the XY and CPHASE, we've picked this convention
# The gates can be generated by exp(i \sum \theta_i P_i)
# where P_i are the paulis
# XY is generated by exp(i*theta*(XX + YY))
# CPHASE is generated by exp(i*phi*(ZZ - IZ - ZI))
# FSIM is generated by exp(i*theta*(XX + YY) + i*phi*(ZZ - IZ - ZI))
DEFGATE FSIM(%theta, %phi):
    1, 0,               0,               0
    0, cos(%theta/2),   i*sin(%theta/2), 0
    0, i*sin(%theta/2), cos(%theta/2),   0
    0, 0,               0,               cis(%phi)

DEFGATE RXX(%phi):
    cos(%phi/2), 0, 0, -i*sin(%phi/2)
    0, cos(%phi/2), -i*sin(%phi/2), 0
    0, -i*sin(%phi/2), cos(%phi/2), 0
    -i*sin(%phi/2), 0, 0, cos(%phi/2)

DEFGATE RYY(%phi):
    cos(%phi/2), 0, 0, -i*sin(%phi/2)
    0, cos(%phi/2), i*sin(%phi/2), 0
    0, i*sin(%phi/2), cos(%phi/2), 0
    -i*sin(%phi/2), 0, 0, cos(%phi/2)

DEFGATE RZZ(%phi):
    cis(-1*%phi/2), 0, 0, 0
    0, cis(%phi/2), 0, 0
    0, 0, cis(%phi/2), 0
    0, 0, 0, cis(-1*%phi/2)

DEFGATE SQISW:
    1.0, 0.0, 0.0, 0.0
    0.0, 0.7071067811865475, 0.7071067811865475i, 0.0
    0.0, 0.7071067811865475i, 0.7071067811865475, 0.0
    0.0, 0.0, 0.0, 1.0

# Lesser-known standard gates
DEFGATE PISWAP(%theta):
    1, 0,               0,               0
    0, cos(%theta/2),   i*sin(%theta/2), 0
    0, i*sin(%theta/2), cos(%theta/2),   0
    0, 0,               0,               1

# there has been some internal debate about whether this gate should be parameterized
# by -1.0*%theta instead. we seem to have picked this one for good, but it's still
# not 100% clear to me that this is the "right" move.
DEFGATE XY(%theta):
    1, 0,               0,               0
    0, cos(%theta/2),   i*sin(%theta/2), 0
    0, i*sin(%theta/2), cos(%theta/2),   0
    0, 0,               0,               1

DEFGATE CAN(%alpha, %beta, %gamma):
    (cis((%alpha+%beta-%gamma)/2)+cis((%alpha-%beta+%gamma)/2))/2, 0, 0, (cis((%alpha-%beta+%gamma)/2)-cis((%alpha+%beta-%gamma)/2))/2
    0, (cis((%alpha+%beta+%gamma)/(-2))+cis((%beta+%gamma-%alpha)/2))/2, (cis((%alpha+%beta+%gamma)/(-2))-cis((%beta+%gamma-%alpha)/2))/2, 0
    0, (cis((%alpha+%beta+%gamma)/(-2))-cis((%beta+%gamma-%alpha)/2))/2, (cis((%alpha+%beta+%gamma)/(-2))+cis((%beta+%gamma-%alpha)/2))/2, 0
    (cis((%alpha-%beta+%gamma)/2)-cis((%alpha+%beta-%gamma)/2))/2, 0, 0, (cis((%alpha+%beta-%gamma)/2)+cis((%alpha-%beta+%gamma)/2))/2

DEFGATE BLOCH(%alpha, %beta, %gamma) q AS PAULI-SUM:
    X(%alpha) q
    Y(%beta) q
    Z(%gamma) q
